/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class ExternalObject<T> {
  readonly '': {
    readonly '': unique symbol
    [K: symbol]: T
  }
}
export function joyGlfwInit(): boolean
export function joyGlfwTerminate(): void
export function joyGlfwCreateWindow(width: number, height: number, title: string): ExternalObject<any> | null
export function joyGlfwSwapBuffers(window: ExternalObject<any>): void
export function joyGlfwPollEvents(): void
export function joyGlfwWindowShouldClose(window: ExternalObject<any>): boolean
export function joyGlfwWindowHint(hint: number, value: number): void
export function joyGlfwSetWindowVisible(window: ExternalObject<any>, visible: boolean): void
export function joyGlfwSetWindowSize(window: ExternalObject<any>, width: number, height: number): void
export function joyGlfwMakeContextCurrent(window: ExternalObject<any>): void
export const WINDOW_HINT_RESIZABLE: number
export const WINDOW_HINT_VISIBLE: number
export const WINDOW_HINT_OPENGL_VERSION_MAJOR: number
export const WINDOW_HINT_OPENGL_VERSION_MINOR: number
export const WINDOW_HINT_OPENGL_PROFILE: number
export const WINDOW_HINT_OPENGL_FORWARD_COMPAT: number
export const OPENGL_PROFILE_CORE: number
export const GLFW_TRUE: number
export const GLFW_FALSE: number
export function joyGlClearColor(r: number, g: number, b: number, a: number): void
export function joyGlClear(mask: number): void
export const GL_COLOR_BUFFER_BIT: number
export const GL_DEPTH_BUFFER_BIT: number
export function joyGlViewport(x: number, y: number, width: number, height: number): void
export function joyGlfwGetFramebufferSize(window: ExternalObject<any>): Array<number>
export function joyGlfwSetErrorCallback(callback: (error: number, description: string) => void): void
export interface JoyU32Result {
  result?: number
  error?: string
}
export const SHADER_TYPE_VERTEX: number
export const SHADER_TYPE_FRAGMENT: number
export function joyGlCompileShader(shaderSource: string, shaderType: number): JoyU32Result
export function joyGlCreateProgram(): number
export function joyGlAttachShader(program: number, shader: number): void
export function joyGlLinkProgram(program: number): string | null
export function joyGlUseProgram(program: number): void
export function joyGlDeleteShader(shader: number): void
export function joyGlDeleteProgram(program: number): void
export function joyGlGenVertexArrays(): number
export function joyGlBindVertexArray(vao: number): void
export function joyGlGenBuffers(): number
export function joyGlBindBuffer(target: number, buffer: number): void
export const BUFFER_TYPE_ARRAY_BUFFER: number
export const BUFFER_TYPE_ELEMENT_ARRAY_BUFFER: number
export function joyGlBufferDataF32(target: number, data: Array<number>, usage: number): void
export function joyGlBufferDataU32(target: number, data: Array<number>, usage: number): void
export const BUFFER_USAGE_STATIC_DRAW: number
export const BUFFER_USAGE_DYNAMIC_DRAW: number
export function joyGlVertexAttribPointer(index: number, size: number, type: number, normalized: boolean, stride: number, offset: number): void
export const GL_FLOAT: number
export function joyGlEnableVertexAttribArray(index: number): void
export function joyGlDisableVertexAttribArray(index: number): void
export function joyGlDrawArrays(mode: number, first: number, count: number): void
export const GL_TRIANGLES: number
export const GL_UNSIGNED_INT: number
export function joyGlDrawElements(mode: number, count: number, type: number, offset: number): void
export function joyGlGetError(): number
export function joyLoadTexture(path: string, settings: (...args: any[]) => any): JoyU32Result
export function joyGlBindTexture(texture: number): void
export function joyGlTexParameteri(pname: number, param: number): void
export const GL_TEXTURE_WRAP_S: number
export const GL_TEXTURE_WRAP_T: number
export const GL_TEXTURE_MIN_FILTER: number
export const GL_TEXTURE_MAG_FILTER: number
export const GL_REPEAT: number
export const GL_NEAREST: number
export const GL_LINEAR: number
export function joyGlDeleteTexture(texture: number): void
export function joyGlActiveTexture(texture: number): void
export const GL_TEXTURE0: number
export function joyGlGetUniformLocation(program: number, name: string): number | null
export function joyGlSetUniform1I(location: number, value: number): void
export function joyGlSetUniform1F(location: number, value: number): void
export function joyGlSetUniform2F(location: number, x: number, y: number): void
export function joyGlSetUniform3F(location: number, x: number, y: number, z: number): void
export function joyGlSetUniform4F(location: number, x: number, y: number, z: number, w: number): void
export function joyGlSetUniformMatrix4Fv(location: number, transpose: boolean, value: Array<number>): void
export function joyGlfwSetWindowCloseCallback(window: ExternalObject<any>, callback: () => void): void
export function joyGlfwGetTime(): number
export function joyGlfwSetTime(time: number): void
export function joyGlfwDestroyWindow(window: ExternalObject<any>): void
export function joyGlfwSetKeyCallback(window: ExternalObject<any>, callback: (key: number, scancode: number, action: number, mods: number) => void): void
export function joyGlfwSetCursorMoveCallback(window: ExternalObject<any>, callback: (xpos: number, ypos: number) => void): void
export function joyGlfwSetCursorMode(window: ExternalObject<any>, mode: number): void
